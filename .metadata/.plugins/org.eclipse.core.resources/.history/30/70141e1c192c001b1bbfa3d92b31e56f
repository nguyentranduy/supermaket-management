/*
 *	(C) Copyright 2020. All rights reserved.
 *	@author duyntps09687
 *	@date Nov 18, 2020
 */
package com.fpoly.server.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.fpoly.server.exception.BadRequestException;
import com.fpoly.server.exception.notfoundexception.SanPhamNotFoundException;
import com.fpoly.server.repository.SanPhamRepository;
import com.fpoly.server.request.dto.SanPhamRequest;
import com.fpoly.server.response.dto.SanPhamResponse;
import com.fpoly.server.service.SanPhamService;

@Service
public class SanPhamServiceImpl implements SanPhamService {
	
	@Autowired
	private SanPhamRepository repo;
	
	@Override
	public List<SanPhamResponse> findAll(String idCuaHang) {
		try {
			return repo.findAll(idCuaHang, 1);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}

	@Override
	public SanPhamResponse findOne(String idSanPham, String idCuaHang) {
		try {
			return repo.findOne(idSanPham, idCuaHang, 1);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}
	
	@Override
	public SanPhamResponse findByMaVach(String maVach, String idCuaHang) {
		try {
			return repo.findByMaVach(maVach, idCuaHang, 1);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}
	
	@Override
	public List<SanPhamResponse> findByNhomHang(Integer idNhomHang, String idCuaHang) {
		try {
			return repo.findByNhomHang(idNhomHang, idCuaHang, 1);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}
	
	@Override
	public List<SanPhamResponse> findByIdCuaHang(String idCuaHang) {
		try {
			return repo.findByIdCuaHang(idCuaHang, 1);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}
	
	@Override
	public List<SanPhamResponse> findByTenSanPham(String idCuaHang, String tenSanPham) {
		try {
			String tenSanPhamRename = "%" + tenSanPham + "%";
			return repo.findByTenSanPham(idCuaHang, 1, tenSanPhamRename);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}
	
	@Override
	public List<SanPhamResponse> findSanPhamDuoiDinhMuc(String idCuaHang) {
		try {
			return repo.findSanPhamDuoiDinhMuc(idCuaHang, 1);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}
	
	@Override
	public List<SanPhamResponse> findSanPhamVuotDinhMuc(String idCuaHang) {
		try {
			return repo.findSanPhamVuotDinhMuc(idCuaHang, 1);
		} catch (Exception ex) {
			throw new SanPhamNotFoundException("SanPhamResponse not found exception");
		}
	}

	@Override
	public SanPhamResponse update(SanPhamRequest sp) {
		try {
			repo.update(sp);
			return repo.findOne(sp.getIdSanPham(), sp.getIdCuaHang(), 1);
		} catch (Exception ex ) {
			ex.printStackTrace();
			throw new BadRequestException("Bad request exception");
		}
	}

}
