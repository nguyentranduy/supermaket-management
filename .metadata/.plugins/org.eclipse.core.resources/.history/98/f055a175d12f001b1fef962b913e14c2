package fa.training.client.exception;

import java.io.IOException;
import java.util.Date;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.http.client.ClientHttpResponse;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.client.ResponseErrorHandler;
import org.springframework.web.context.request.WebRequest;

@RestControllerAdvice
public class CategoryErrorHandler implements ResponseErrorHandler {
	
	@ExceptionHandler(CategoryNotFoundException.class)
	public final ResponseEntity<Object> handleUserNotFoundExceptions(CategoryNotFoundException ex, WebRequest request ){
		ExceptionResponse exceptionResponse = 
				new ExceptionResponse(
						new Date(), ex.getMessage(), request.getDescription(false));
		return new ResponseEntity<>(exceptionResponse, HttpStatus.NOT_FOUND);
	}
	
	@Override
	public boolean hasError(ClientHttpResponse response) throws IOException {
		return false;
	}

	@Override
	public void handleError(ClientHttpResponse response) throws IOException {}

}
